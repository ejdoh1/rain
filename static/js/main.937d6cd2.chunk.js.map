{"version":3,"sources":["App.js","index.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","tilesUrl","App","useState","lat","lng","marker","setMarker","zoom","bomUrl","setBomUrl","bomUrlFade","setBomUrlFade","linestring","setLinestring","rainDirUpdated","setRainDirUpdated","pc","setPc","timestep","setTimestep","React","count","setCount","mapRef","useRef","useEffect","fetch","then","r","json","d","index","inputs","png","split","script","document","createElement","src","async","body","appendChild","map","current","leafletElement","d3","u","v","vf","VectorField","fromASCIIGrids","animation","canvasLayer","vectorFieldAnim","paths","fade","maxAge","velocityScale","color","addTo","direction","scalarField","getScalarField","type","vectorSize","arrowDirection","control","layers","Flow","Arrows","position","collapsed","useInterval","ts","data","timesteps","length","replace","setTimeout","toMinutes","p","m","parseInt","ext","Map","ref","center","style","width","top","bottom","updateWhenZooming","updateWhenIdle","preferCanvas","minZoom","maxBounds","latLngBounds","latLng","onClick","latlng","TileLayer","maxZoom","attribution","url","Marker","GeoJSON","key","JSON","stringify","arrowheads","fill","size","Card","minWidth","CardContent","percent","strokeWidth","strokeColor","filter","utc","durationFromNow","parse","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.937d6cd2.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Map, TileLayer, Marker, GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-arrowheads\";\nimport useInterval from \"use-interval\";\nimport Control from \"@skyeer/react-leaflet-custom-control\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Line } from \"rc-progress\";\nimport Moment from \"react-moment\";\nimport * as d3 from \"d3\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nconst tilesUrl =\n  \"https://radar-tiles.service.bom.gov.au/tiles/{timestep}/{z}/{x}/{y}.png\";\n\nconst urlRainDir =\n  \"https://osiu38kob3.execute-api.ap-southeast-2.amazonaws.com/dev/rain-direction?loc=\";\n\nconst urlBomCapabilities =\n  \"https://api.weather.bom.gov.au/v1/rainradarlayer/capabilities\";\n\nconst tileUrlMap =\n  \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\";\n\n// const tileUrlMap =\n//   \"https://services.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Dark_Gray_Base/MapServer/tile/{z}/{y}/{x}\"\n\nconst attribution =\n  '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n\nconst urlU = \"https://rain-rain.s3-ap-southeast-2.amazonaws.com/u.asc\";\nconst urlV = \"https://rain-rain.s3-ap-southeast-2.amazonaws.com/v.asc\";\n\nconst urlVector =\n  \"https://ihcantabria.github.io/Leaflet.CanvasLayer.Field/dist/leaflet.canvaslayer.field.js\";\n\nexport default function App() {\n  const [marker, setMarker] = useState({ lat: 0, lng: 0 });\n  const [zoom] = useState(5);\n  const [bomUrl, setBomUrl] = useState(\"\");\n  const [bomUrlFade, setBomUrlFade] = useState(\"\");\n  const [linestring, setLinestring] = useState(\"\");\n  const [rainDirUpdated, setRainDirUpdated] = useState(\"\");\n  const [pc, setPc] = useState(\"0\");\n  const [timestep, setTimestep] = useState(\"\");\n  let [count, setCount] = React.useState(0);\n  const mapRef = useRef();\n\n  useEffect(() => {\n    if (marker.lat === 0) return;\n    fetch(urlRainDir + marker.lat + \",\" + marker.lng)\n      .then((r) => r.json())\n      .then((d) => {\n        setLinestring(d.linestring);\n        setRainDirUpdated(d.index.inputs[1].png.split(\"/\")[1].split(\".\")[0]);\n      });\n  }, [marker]);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = urlVector;\n    script.async = true;\n    document.body.appendChild(script);\n    const map = mapRef.current.leafletElement;\n    d3.text(urlU).then((u) => {\n      d3.text(urlV).then((v) => {\n        let vf = L.VectorField.fromASCIIGrids(u, v);\n        const animation = L.canvasLayer\n          .vectorFieldAnim(vf, {\n            paths: 1000,\n            fade: 0.97,\n            maxAge: 50,\n            velocityScale: 1 / 2000,\n            color: \"rgba(255, 255, 255, 0.7)\",\n          })\n          .addTo(map);\n        const direction = L.canvasLayer.scalarField(\n          vf.getScalarField(\"directionFrom\"),\n          {\n            type: \"vector\",\n            color: \"white\",\n            vectorSize: 25,\n            arrowDirection: \"from\",\n          }\n        );\n        L.control\n          .layers(\n            {},\n            {\n              Flow: animation,\n              Arrows: direction,\n            },\n            {\n              position: \"bottomleft\",\n              collapsed: false,\n            }\n          )\n          .addTo(map);\n      });\n    });\n  }, []);\n\n  useInterval(() => {\n    fetch(urlBomCapabilities)\n      .then((r) => r.json())\n      .then((d) => {\n        const ts = d.data.timesteps[count];\n        setTimestep(ts + \"Z\");\n        const pc = (count / (d.data.timesteps.length - 1)) * 100.0;\n        setPc(pc);\n        setBomUrl(tilesUrl.replace(\"{timestep}\", ts));\n        setTimeout(() => {\n          setBomUrlFade(tilesUrl.replace(\"{timestep}\", ts));\n        }, 300);\n        if (count === d.data.timesteps.length - 1) {\n          setCount(0);\n        } else {\n          setCount(count + 1);\n        }\n      });\n  }, 1000);\n\n  const toMinutes = (d) => {\n    const p = d.split(\":\");\n    let m = \"\";\n    m = p[0];\n    if (p.length === 3) m = 60 * parseInt(p[0], 10) + parseInt(p[1]);\n    let ext = \" minutes ago\";\n    if (m === \"1\") ext = \" minute ago\";\n    return m + ext;\n  };\n\n  return (\n    <Map\n      ref={mapRef}\n      center={[-28, 132]}\n      zoom={zoom}\n      style={{\n        width: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n      }}\n      updateWhenZooming={false}\n      updateWhenIdle={true}\n      preferCanvas={true}\n      minZoom={2}\n      maxBounds={L.latLngBounds(L.latLng(-47, 109), L.latLng(-7, 158.1))}\n      onClick={({ latlng }) => setMarker(latlng)}\n    >\n      <TileLayer maxZoom={10} attribution={attribution} url={tileUrlMap} />\n      {bomUrl !== \"\" ? <TileLayer maxZoom={10} url={bomUrl} /> : <></>}\n      {bomUrlFade !== \"\" ? <TileLayer maxZoom={10} url={bomUrlFade} /> : <></>}\n      {marker.lat !== 0 ? <Marker position={marker}></Marker> : <></>}\n      {linestring !== \"\" ? (\n        <GeoJSON\n          key={JSON.stringify(linestring)}\n          data={linestring}\n          arrowheads={{ fill: true, size: \"30%\" }}\n          style={{ color: \"green\" }}\n        />\n      ) : (\n        <></>\n      )}\n      {timestep !== \"\" ? (\n        <Control position=\"topright\">\n          <Card style={{ minWidth: 100 }}>\n            <CardContent>\n              <Line percent={pc} strokeWidth=\"8\" strokeColor=\"black\" />\n              <Moment\n                filter={toMinutes}\n                utc\n                durationFromNow\n                parse=\"YYYYMMDDhhmm\"\n              >\n                {timestep}\n              </Moment>\n              {rainDirUpdated !== \"\" ? (\n                <div>\n                  Updated:\n                  <Moment\n                    filter={toMinutes}\n                    utc\n                    durationFromNow\n                    parse=\"YYYYMMDDhhmm\"\n                  >\n                    {rainDirUpdated}\n                  </Moment>\n                </div>\n              ) : (\n                <></>\n              )}\n            </CardContent>\n          </Card>\n        </Control>\n      ) : (\n        <></>\n      )}\n    </Map>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}